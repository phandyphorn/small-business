{"ast":null,"code":"\"use strict\";\n\n/*\n * Copyright 2015, Yahoo Inc.\n * Copyrights licensed under the New BSD License.\n * See the accompanying LICENSE file for terms.\n */\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar tslib_1 = require(\"tslib\");\nvar intl_1 = require(\"@formatjs/intl\");\nvar React = tslib_1.__importStar(require(\"react\"));\nvar utils_1 = require(\"../utils\");\nvar injectIntl_1 = require(\"./injectIntl\");\nvar createIntl_1 = require(\"./createIntl\");\nfunction processIntlConfig(config) {\n  return {\n    locale: config.locale,\n    timeZone: config.timeZone,\n    fallbackOnEmptyString: config.fallbackOnEmptyString,\n    formats: config.formats,\n    textComponent: config.textComponent,\n    messages: config.messages,\n    defaultLocale: config.defaultLocale,\n    defaultFormats: config.defaultFormats,\n    onError: config.onError,\n    onWarn: config.onWarn,\n    wrapRichTextChunksInFragment: config.wrapRichTextChunksInFragment,\n    defaultRichTextElements: config.defaultRichTextElements\n  };\n}\nvar IntlProvider = /** @class */function (_super) {\n  tslib_1.__extends(IntlProvider, _super);\n  function IntlProvider() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n    _this.cache = (0, intl_1.createIntlCache)();\n    _this.state = {\n      cache: _this.cache,\n      intl: (0, createIntl_1.createIntl)(processIntlConfig(_this.props), _this.cache),\n      prevConfig: processIntlConfig(_this.props)\n    };\n    return _this;\n  }\n  IntlProvider.getDerivedStateFromProps = function (props, _a) {\n    var prevConfig = _a.prevConfig,\n      cache = _a.cache;\n    var config = processIntlConfig(props);\n    if (!(0, utils_1.shallowEqual)(prevConfig, config)) {\n      return {\n        intl: (0, createIntl_1.createIntl)(config, cache),\n        prevConfig: config\n      };\n    }\n    return null;\n  };\n  IntlProvider.prototype.render = function () {\n    (0, utils_1.invariantIntlContext)(this.state.intl);\n    return React.createElement(injectIntl_1.Provider, {\n      value: this.state.intl\n    }, this.props.children);\n  };\n  IntlProvider.displayName = 'IntlProvider';\n  IntlProvider.defaultProps = utils_1.DEFAULT_INTL_CONFIG;\n  return IntlProvider;\n}(React.PureComponent);\nexports.default = IntlProvider;","map":{"version":3,"names":["Object","defineProperty","exports","value","tslib_1","require","intl_1","React","__importStar","utils_1","injectIntl_1","createIntl_1","processIntlConfig","config","locale","timeZone","fallbackOnEmptyString","formats","textComponent","messages","defaultLocale","defaultFormats","onError","onWarn","wrapRichTextChunksInFragment","defaultRichTextElements","IntlProvider","_super","__extends","_this","apply","arguments","cache","createIntlCache","state","intl","createIntl","props","prevConfig","getDerivedStateFromProps","_a","shallowEqual","prototype","render","invariantIntlContext","createElement","Provider","children","displayName","defaultProps","DEFAULT_INTL_CONFIG","PureComponent","default"],"sources":["/home/phandy/Documents/my-app/node_modules/react-intl/src/components/provider.js"],"sourcesContent":["\"use strict\";\n/*\n * Copyright 2015, Yahoo Inc.\n * Copyrights licensed under the New BSD License.\n * See the accompanying LICENSE file for terms.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar tslib_1 = require(\"tslib\");\nvar intl_1 = require(\"@formatjs/intl\");\nvar React = tslib_1.__importStar(require(\"react\"));\nvar utils_1 = require(\"../utils\");\nvar injectIntl_1 = require(\"./injectIntl\");\nvar createIntl_1 = require(\"./createIntl\");\nfunction processIntlConfig(config) {\n    return {\n        locale: config.locale,\n        timeZone: config.timeZone,\n        fallbackOnEmptyString: config.fallbackOnEmptyString,\n        formats: config.formats,\n        textComponent: config.textComponent,\n        messages: config.messages,\n        defaultLocale: config.defaultLocale,\n        defaultFormats: config.defaultFormats,\n        onError: config.onError,\n        onWarn: config.onWarn,\n        wrapRichTextChunksInFragment: config.wrapRichTextChunksInFragment,\n        defaultRichTextElements: config.defaultRichTextElements,\n    };\n}\nvar IntlProvider = /** @class */ (function (_super) {\n    tslib_1.__extends(IntlProvider, _super);\n    function IntlProvider() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.cache = (0, intl_1.createIntlCache)();\n        _this.state = {\n            cache: _this.cache,\n            intl: (0, createIntl_1.createIntl)(processIntlConfig(_this.props), _this.cache),\n            prevConfig: processIntlConfig(_this.props),\n        };\n        return _this;\n    }\n    IntlProvider.getDerivedStateFromProps = function (props, _a) {\n        var prevConfig = _a.prevConfig, cache = _a.cache;\n        var config = processIntlConfig(props);\n        if (!(0, utils_1.shallowEqual)(prevConfig, config)) {\n            return {\n                intl: (0, createIntl_1.createIntl)(config, cache),\n                prevConfig: config,\n            };\n        }\n        return null;\n    };\n    IntlProvider.prototype.render = function () {\n        (0, utils_1.invariantIntlContext)(this.state.intl);\n        return React.createElement(injectIntl_1.Provider, { value: this.state.intl }, this.props.children);\n    };\n    IntlProvider.displayName = 'IntlProvider';\n    IntlProvider.defaultProps = utils_1.DEFAULT_INTL_CONFIG;\n    return IntlProvider;\n}(React.PureComponent));\nexports.default = IntlProvider;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}